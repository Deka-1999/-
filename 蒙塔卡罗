import math
import random
import numpy as np
import matplotlib
from scipy import stats

p_x = []
p_y = []
m = []
n = []

power = 4
t = 0.4  
sum_ = (math.pow(1-t, power + 1) - math.pow(-t, power + 1)) / (power + 1)  #求积分

c = 0.6**4/sum_

def f(x):
    return (x - 0.4)**4/sum_

def g(x):
    #mean = (1,1)
    #conv = np.array([[0.5,0.0],
    #                 [0.0,0.5]])
    return stats.norm(0, 2.5).pdf(x)
    #return np.random.multivariate_normal(mean=mean, cov=conv, size=1000)
    #return numpy.random.mtrand.RandomState.multivariate_normal()



for i in range(1000):
    x = random.uniform(0,1)
    y = 8*random.uniform(0,1)
    
    if y < f(x) / ( c * g(x) ) :
        p_x.append(x)
        p_y.append(y)
    else:
        m.append(x)
        n.append(y)

fig  = plt.figure(1)
plt.scatter(p_x,p_y,color = 'blue')
plt.scatter(m,n,color = 'red')
plt.show()
